<?php class pathController extends Controller { function __construct(){ global $registry;parent::__construct($registry);} static private $Instance =NULL;static public function getInstance() { if(self::$Instance==NULL){ $class=__CLASS__;self::$Instance=new $class;} return self::$Instance;} private function getAllProductCategories($product_id) { $sql="SELECT * FROM ".DB_PREFIX."product_to_category WHERE product_id = '" . (int)$product_id . "'";$query=$this->db->query($sql);return $query->rows;} private function getPath($parent_id,$current_path='',$name='') { $this->load->model('catalog/category');$category_info=$this->model_catalog_category->getCategory($parent_id);if ($category_info AND $category_info['status']) { $i=1;while($category_info['parent_id'] > 0) { $paths[$i]=array('name'=> $category_info['name'],'id'=> $category_info['category_id']);$category_info=$this->model_catalog_category->getCategory($category_info['parent_id']);if(!isset($category_info['parent_id'])){break;} $i++;} if(isset($category_info['parent_id'])){ $paths[$i]=array('name'=> $category_info['name'],'id'=> $category_info['category_id']);} $result=$paths;$path_length=count($paths);foreach($result as $i=> $section){ $path=$section['id'];for ($s=$i+1;$s <=$path_length;$s++) { $path=$result[$s]['id'].'_'.$path;} $result[$i]['path']=$path;} return array_reverse($result);}else{ return false;} } public function getProductPath($product_id,$mode) { $result=array();$categories=$this->getAllProductCategories($product_id);$paths=array();if($categories) { foreach($categories as $category){ $path=$this->getPath($category['category_id']);if($path){ $paths[]=$path;} } }else{ return $paths;} if(isset($paths[0])){ $result=$paths[0];}else{return $paths;} switch ($mode) { case 'shortest':foreach($paths as $i=> $path){ if(isset($paths[$i+1])){ if(count($paths[$i]) > count($paths[$i+1])){ $result=$paths[$i+1];} } } break;case 'longest':foreach($paths as $i=> $path){ if(isset($paths[$i+1])){ if(count($paths[$i]) < count($paths[$i+1])){ $result=$paths[$i+1];} } } break;case 'last_category':if($categories) { if(isset($paths[0])){ $result=array(end($paths[0]));$result[0]['path']=$categories[0] ['category_id'];} } break;case 'first_category':if($categories) { if(isset($paths[0][0])){ $result=array($paths[0][0]);} } break;} return $result;} public function getCaregoryPath($category_id,$mode) { $paths=array();$paths=$this->getPath($category_id);if($mode=='shortest' AND count($paths) > 2){ $end_path=end($paths);$end_path['path']=preg_replace('/_.*_/i','_',$end_path['path']);$paths=array($paths[0],$end_path);} return $paths;} public function getRealProductPath($product_id,$mode) { if($mode=='direct'){ return '';}else{ $paths=$this->getProductPath($product_id,$mode);if(!count($paths))return '';return $paths[count($paths)-1]['path'];} } public function getRealCaregoryPath($category_id,$mode) { $paths=array();if($mode=='direct'){ return $category_id;}elseif($mode=='full'){ $paths=$this->getPath($category_id);return $paths[count($paths)-1]['path'];}elseif($mode=='shortest'){ $paths=$this->getPath($category_id);if(count($paths) > 2){ $end_path=end($paths);$end_path['path']=preg_replace('/_.*_/i','_',$end_path['path']);$paths=array($paths[0],$end_path);} return $paths[count($paths)-1]['path'];} return false;} } ?>
